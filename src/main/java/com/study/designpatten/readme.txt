一、程序设计6大原则
1. 单一职责原则（六大规则中的小萝莉，人见人爱）：描述的意思是每个类都只负责单一的功能，切不可太多，并且一个类应当尽量的把一个功能做到极致。

2.里氏替换原则（六大原则中最文静的姑娘，但却不太招人喜欢）：这个原则表达的意思是一个子类应该可以替换掉父类并且可以正常工作

3.接口隔离原则（六大原则当中最挑三拣四的挑剔女，胸部极小）：也称接口最小化原则，强调的是一个接口拥有的行为应该尽可能的小

4.依赖倒置原则（六大原则中最小鸟依人的姑娘，对抽象的东西非常依赖）：这个原则描述的是高层模块不该依赖于低层模块，二者都应该依赖于抽象，抽象不应该依赖于细节，细节应该依赖于抽象。

5.迪米特原则（六大原则中最害羞的姑娘，不太爱和陌生人说话）：也称最小知道原则，即一个类应该尽量不要知道其他类太多的东西，不要和陌生的类有太多接触。

6.开-闭原则（六大原则中绝对的大姐大，另外五姐妹心甘情愿臣服）：最后一个原则，一句话，对修改关闭，对扩展开放。


二、设计模式分类

1.创建型模式
    1.1 简单工厂模式(simple factory)
    1.2 工厂方法模式(factory method)
    1.3 抽象工厂模式(abstract factory)
    1.4 单例模式(singleton)
    1.5 建造者模式(builder)
    1.6 原型模式(prototype)
2.结构模式
    2.1 外观模式/门面模式(facade)
    2.2 适配器模式(adaptor)
    2.3 代理模式(proxy)
    2.4 装饰模式(decorator)
    2.6 桥接模式(bridge)
    2.7 组合模式(composite)
    2.8 享元模式(flyweight)
3.行为模式
    3.1 模板方法模式(template method)
    3.2 观察者模式(observer)
    3.3 状态模式(state)
    3.4 策略模式(stategy)
    3.5 职责链模式(chain of responsibility)
    3.6 命令模式(command)
    3.7 访问者模式(visitor)
    3.8 备忘录模式(memento)
    3.9 迭代器模式(iterator)
    3.10 解释器模式(interpreter)
*创建型模式为其他两种模式使用提供了环境。
*结构型模式侧重于接口的使用，它做的一切工作都是对象或是类之间的交互，提供一个门。
*行为型模式顾名思义，侧重于具体行为，所以概念中才会出现职责分配和算法通信等内容。

三、设计模式演义




